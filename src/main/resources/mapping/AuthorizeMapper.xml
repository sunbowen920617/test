<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheman.lock.dao.AuthorizeMapper">
  <resultMap id="BaseResultMap" type="com.zheman.lock.model.Authorize">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ROOMID" jdbcType="INTEGER" property="roomid" />
    <result column="DATETIME" jdbcType="TIMESTAMP" property="datetime" />
    <result column="RESIDENTID" jdbcType="INTEGER" property="residentid" />
    <result column="AUTHORIZE" jdbcType="INTEGER" property="authorize" />
    <result column="AUTHRESIDENTID" jdbcType="INTEGER" property="authresidentid" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, ROOMID, DATETIME, RESIDENTID, AUTHORIZE, AUTHRESIDENTID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from authorize
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from authorize
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zheman.lock.model.Authorize">
    insert into authorize (ID, ROOMID, DATETIME, 
      RESIDENTID, AUTHORIZE, AUTHRESIDENTID
      )
    values (#{id,jdbcType=INTEGER}, #{roomid,jdbcType=INTEGER}, #{datetime,jdbcType=TIMESTAMP}, 
      #{residentid,jdbcType=INTEGER}, #{authorize,jdbcType=INTEGER}, #{authresidentid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zheman.lock.model.Authorize">
    insert into authorize
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="roomid != null">
        ROOMID,
      </if>
      <if test="datetime != null">
        DATETIME,
      </if>
      <if test="residentid != null">
        RESIDENTID,
      </if>
      <if test="authorize != null">
        AUTHORIZE,
      </if>
      <if test="authresidentid != null">
        AUTHRESIDENTID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomid != null">
        #{roomid,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="residentid != null">
        #{residentid,jdbcType=INTEGER},
      </if>
      <if test="authorize != null">
        #{authorize,jdbcType=INTEGER},
      </if>
      <if test="authresidentid != null">
        #{authresidentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zheman.lock.model.Authorize">
    update authorize
    <set>
      <if test="roomid != null">
        ROOMID = #{roomid,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        DATETIME = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="residentid != null">
        RESIDENTID = #{residentid,jdbcType=INTEGER},
      </if>
      <if test="authorize != null">
        AUTHORIZE = #{authorize,jdbcType=INTEGER},
      </if>
      <if test="authresidentid != null">
        AUTHRESIDENTID = #{authresidentid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zheman.lock.model.Authorize">
    update authorize
    set ROOMID = #{roomid,jdbcType=INTEGER},
      DATETIME = #{datetime,jdbcType=TIMESTAMP},
      RESIDENTID = #{residentid,jdbcType=INTEGER},
      AUTHORIZE = #{authorize,jdbcType=INTEGER},
      AUTHRESIDENTID = #{authresidentid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>