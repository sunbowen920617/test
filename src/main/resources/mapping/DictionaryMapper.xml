<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheman.lock.dao.DictionaryMapper">
	<resultMap id="BaseResultMap" type="com.zheman.lock.model.Dictionary">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="TYPE" jdbcType="VARCHAR" property="type" />
		<result column="PARENTID" jdbcType="INTEGER" property="parentid" />
		<result column="VALUE" jdbcType="INTEGER" property="value" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, NAME, TYPE, PARENTID, VALUE
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dictionary
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectChildrenByType" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dictionary where PARENTID in (select id from dictionary where
		TYPE = #{type,jdbcType=INTEGER})
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		dictionary
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zheman.lock.model.Dictionary">
		insert into dictionary (ID,
		NAME, TYPE,
		PARENTID, VALUE)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{parentid,jdbcType=INTEGER}, #{value,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.zheman.lock.model.Dictionary">
		insert into dictionary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="name != null">
				NAME,
			</if>
			<if test="type != null">
				TYPE,
			</if>
			<if test="parentid != null">
				PARENTID,
			</if>
			<if test="value != null">
				VALUE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="parentid != null">
				#{parentid,jdbcType=INTEGER},
			</if>
			<if test="value != null">
				#{value,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zheman.lock.model.Dictionary">
		update dictionary
		<set>
			<if test="name != null">
				NAME = #{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE = #{type,jdbcType=VARCHAR},
			</if>
			<if test="parentid != null">
				PARENTID = #{parentid,jdbcType=INTEGER},
			</if>
			<if test="value != null">
				VALUE = #{value,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zheman.lock.model.Dictionary">
		update dictionary
		set NAME = #{name,jdbcType=VARCHAR},
		TYPE = #{type,jdbcType=VARCHAR},
		PARENTID = #{parentid,jdbcType=INTEGER},
		VALUE =
		#{value,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>